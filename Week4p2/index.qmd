---
title: "Spatial Visualization with Python"
jupyter: python3
---

# Loading packages

```{python}
import geopandas as gpd
import folium
```

# Load and inspect meuse data

```{python}
meuse = gpd.read_file("meuse.shp")  # Adjust the file path as needed

# Inspect the first few rows of the data
print(meuse.head())
```

# Visualise the data

```{python}
import matplotlib.pyplot as plt

# Plot the meuse dataset (points in this case)
meuse.plot(marker='o', color='blue', markersize=5)

# Show the plot
plt.title('Meuse Spatial Data Visualization')
plt.xlabel('Longitude')
plt.ylabel('Latitude')
plt.show()
```

# Customize plot

```{python}
meuse.plot(column='zinc', cmap='viridis', legend=True, markersize=5)

# Show the plot
plt.title('Zinc Concentration in Meuse Data')
plt.xlabel('Longitude')
plt.ylabel('Latitude')
plt.show()
```

```{python}
# Ensure the GeoDataFrame has the correct CRS and reproject to WGS84 for folium
gdf = meuse.to_crs(epsg=4326)

# Create a folium map centered on the data
map_center = [gdf.geometry.y.mean(), gdf.geometry.x.mean()]
m = folium.Map(location=map_center, zoom_start=12)

# Add points to the map with a popup for one of the attributes
for _, row in gdf.iterrows():
    folium.CircleMarker(
        location=[row.geometry.y, row.geometry.x],
        radius=5,
        color='blue',
        fill=True,
        fill_opacity=0.6,
        popup=f"Zinc: {row['zinc']}"  # Replace 'zinc' with a column from your shapefile
    ).add_to(m)

# Save or display the map
m.save("meuse_map.html")
m
```
